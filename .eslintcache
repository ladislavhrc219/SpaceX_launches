[{"/Users/LACI/Web/yo.SpaceXReact/src/index.js":"1","/Users/LACI/Web/yo.SpaceXReact/src/App.js":"2","/Users/LACI/Web/yo.SpaceXReact/src/components/spacex-list/spacex-list.jsx":"3","/Users/LACI/Web/yo.SpaceXReact/src/components/searchbox/searchbox.jsx":"4","/Users/LACI/Web/yo.SpaceXReact/src/components/spacex-cards/spacex-cards.jsx":"5","/Users/LACI/Web/yo.SpaceXReact/src/components/homepage/Homepage.jsx":"6"},{"size":458,"mtime":1587040770400,"results":"7","hashOfConfig":"8"},{"size":2795,"mtime":1612302483546,"results":"9","hashOfConfig":"8"},{"size":1699,"mtime":1609710061036,"results":"10","hashOfConfig":"8"},{"size":251,"mtime":1612302257873,"results":"11","hashOfConfig":"8"},{"size":3861,"mtime":1609708991837,"results":"12","hashOfConfig":"8"},{"size":1417,"mtime":1612302120683,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1gdhwfl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/LACI/Web/yo.SpaceXReact/src/index.js",[],["29","30"],"/Users/LACI/Web/yo.SpaceXReact/src/App.js",["31","32","33"],"/Users/LACI/Web/yo.SpaceXReact/src/components/spacex-list/spacex-list.jsx",["34","35"],"import React from 'react';\nimport { Jumbotron, Button } from 'react-bootstrap';\nimport {Cards} from '../spacex-cards/spacex-cards.jsx';\nimport './spacex-list.css';\n\n// import {SearchBox} from './../searchbox/searchbox.jsx';\n// import {SearchBox} from './components/searchbox/searchbox.jsx';\n\n\n// handleChange = (e) => {\n//     this.setState({searchField: e.target.value})\n// }\n\n// handleChange =(e) => {\n//     this.setState({searchField: e.target.value})\n//   }\n\nexport const SpaceXlist =(props)=> {\n    return (\n                <>\n\n\n                <div className=\"space-img\">\n                    {/* <h1 className=\"spacex-header bg-warning\">\n                         SpaceX\n                         <br></br>\n                          Launch Manifest\n                    \n                    </h1> */}\n                    {/* <h1 className=\"spacex-header bg-warning\"> Launch Manifest </h1> */}\n                    {/* <h2 class=\"spacex-dates\">2006 - 2019</h2>  */}\n                    {/* <h2 class=\"spacex-dates\">search mission names </h2>  */}\n                    \n                </div>\n                {/* <SearchBox\n                className='search'\n                placeholder=' mission names'\n                handleChange={this.handleChange}\n                /> */}\n                <div className=\"card-list\">\n                        {props.launches.map(launch => (\n                            \n                            <Cards launch={launch} />\n                        )\n                            )}\n                    </div>\n               \n               \n                <h2 class=\"spacex-footer\"> All Rights Reserved 2021</h2> \n                \n                </>\n    )\n   \n}\n\n","/Users/LACI/Web/yo.SpaceXReact/src/components/searchbox/searchbox.jsx",[],"/Users/LACI/Web/yo.SpaceXReact/src/components/spacex-cards/spacex-cards.jsx",["36"],"import React from 'react';\n// import ReactPlayer from \"react-player\";\n\nimport { MDBJumbotron, MDBContainer, MDBRow, MDBCol, MDBIcon, MDBCardTitle, MDBCardImage, MDBCardBody, MDBCardText } from \"mdbreact\";\n\n\nimport './spacex-cards.css';\n// curly braces then return in components otherwise error \n// without return normal braces after props \nexport const Cards = (props) => {\n    return (\n    <>\n    \n   \n            {/* <div className=\"card-container\">\n            <h4> Flight Number: {props.launch.flight_number} </h4> \n            <h1> Mission Name: {props.launch.mission_name}</h1> \n            <h2> Mission Patch </h2> \n            <div className=\"missionpatches\">\n                <img src={props.launch.links.mission_patch_small} alt=\"patch\" /> \n                </div> \n\n            <h2> Rocket details</h2> \n            <p>  ID: {props.launch.rocket.rocket_id}</p>\n            <p>  Name: {props.launch.rocket.rocket_name}</p>\n            <p>  Type: {props.launch.rocket.rocket_type}</p>\n            <h2> Launch site</h2>\n            <p> {props.launch.launch_site.site_name_long}</p>\n            <h2> Failure details </h2> \n            <p> {props.launch.details}</p>\n            <h2> \n                Read the article on  \n                <a href={props.launch.links.article_link}> Space.com </a> \n                Or Watch it on\n                <a href={props.launch.links.video_link}>  Youtube </a>\n            </h2>\n           <div className=\"ReactPlayer\"> \n            <ReactPlayer url={props.launch.links.video_link}/>\n            </div>\n            </div> */}\n\n\n            <MDBContainer className=\"mt-5 text-center\">\n      <MDBRow>\n        <MDBCol>\n          <MDBJumbotron className=\"text-center\">\n            <MDBCardTitle className=\"card-title h4 pb-2\">\n              <strong>Flight Number: {props.launch.flight_number} </strong>\n              {/* <strong>Mission Name: {props.launch.mission_name} </strong> */}\n            </MDBCardTitle>\n            <MDBCardTitle className=\"card-title h4 pb-2\">\n              {/* <strong>Flight Number: {props.launch.flight_number} </strong> */}\n              <strong>Mission Name: {props.launch.mission_name} </strong>\n            </MDBCardTitle>\n            <MDBCardTitle className=\"indigo-text h5 m-4\">\n                MISSION PATCH\n              </MDBCardTitle>\n\n            <MDBContainer className=\"mt-5 center\">\n            <MDBCardImage\n            src={props.launch.links.mission_patch_small} \n                        className=\"img-fluid\" \n                        />\n            </MDBContainer>\n            <MDBCardBody>\n              <MDBCardTitle className=\"indigo-text h5 m-4\">\n               <h2>Rocket details </h2> \n              </MDBCardTitle>\n              <MDBCardText>\n              \n\n              <p>  ID: {props.launch.rocket.rocket_id}</p>\n            <p>  Name: {props.launch.rocket.rocket_name}</p>\n            <p>  Type: {props.launch.rocket.rocket_type}</p>\n\n\n              <h2> Launch site</h2>\n            <p> {props.launch.launch_site.site_name_long}</p>\n            <h2> Failure details </h2> \n            <p> {props.launch.details}</p>\n           \n           \n              </MDBCardText>\n\n\n              <MDBCardText>\n              <h2> \n                Read the article on  \n                <a href={props.launch.links.article_link}> Space.com </a> \n                \n            </h2>\n            <h2> \n               \n                Watch it on\n                <a href={props.launch.links.video_link}>  Youtube </a>\n            </h2>\n\n\n              </MDBCardText>\n              {/*  */}\n\n            {/* <div className=\"ReactPlayer\">  */}\n            {/* <ReactPlayer url={props.launch.links.video_link}/> */}\n               {/* </div> */}\n            </MDBCardBody>\n          </MDBJumbotron>\n        </MDBCol>\n      </MDBRow>\n    </MDBContainer>\n            \n    </>\n    )\n}","/Users/LACI/Web/yo.SpaceXReact/src/components/homepage/Homepage.jsx",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":31},{"ruleId":"45","severity":1,"message":"46","line":75,"column":19,"nodeType":"47","endLine":75,"endColumn":30},{"ruleId":"45","severity":1,"message":"46","line":81,"column":19,"nodeType":"47","endLine":81,"endColumn":30},{"ruleId":"41","severity":1,"message":"48","line":2,"column":10,"nodeType":"43","messageId":"44","endLine":2,"endColumn":19},{"ruleId":"41","severity":1,"message":"49","line":2,"column":21,"nodeType":"43","messageId":"44","endLine":2,"endColumn":27},{"ruleId":"41","severity":1,"message":"50","line":4,"column":54,"nodeType":"43","messageId":"44","endLine":4,"endColumn":61},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Jumbotron' is defined but never used.","'Button' is defined but never used.","'MDBIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]